C51 COMPILER V8.12   HAL_NRF_HW                                                            02/01/2011 01:08:29 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE HAL_NRF_HW
OBJECT MODULE PLACED IN .\hal_nrf_hw.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\hal\nrf24lu1p\hal_nrf_hw.c BROWSE INCDIR(..\..\..\hal\nrf24lu1p;..
                    -\..\..\hal\nrf24l01p;..\..\..\hal;..\..\..\compiler\c51) DEFINE(MCU_NRF24LU1P) DEBUG OBJECTEXTEND PRINT(.\hal_nrf_hw.lst
                    -) OBJECT(.\hal_nrf_hw.obj)

line level    source

   1          /* Copyright (c) 2009 Nordic Semiconductor. All Rights Reserved.
   2           *
   3           * The information contained herein is confidential property of Nordic 
   4           * Semiconductor ASA.Terms and conditions of usage are described in detail 
   5           * in NORDIC SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT. 
   6           *
   7           * Licensees are granted free, non-transferable use of the information. NO
   8           * WARRENTY of ANY KIND is provided. This heading must NOT be removed from
   9           * the file.
  10           *              
  11           * $LastChangedRevision: 5717 $
  12           */
  13          
  14          /** @file
  15           * @brief Implementation of #hal_nrf_rw for nRF24LU1+
  16           *
  17           * #hal_nrf_rw is an SPI function which is hardware dependent. This file
  18           * contains an implementation for nRF24LU1.
  19           */
  20          
  21          #include <Nordic\reg24lu1.h>
  22          #include <stdint.h>
  23          #include "hal_nrf.h"
  24          
  25          uint8_t hal_nrf_rw(uint8_t value)
  26          {
  27   1        RFDAT = value;
  28   1        RFSPIF = 0;     // ! IMPORTANT ! Clear RF SPI ready flag
  29   1                        // after data written to RFDAT..
  30   1        while(!RFSPIF); // wait for byte transfer finished
  31   1          
  32   1        return RFDAT;   // return SPI read value
  33   1      }
  34          
  35          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     10    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
